%% Templates plots 
% good
figure;
good_plot = tiledlayout(2,3);
title(good_plot, 'Good units')
nexttile
imagesc(squeeze(templateWaveforms(83, :, :)))
title('Unit 82')
nexttile
imagesc(squeeze(templateWaveforms(145, :, :)))
title('Unit 144')
nexttile
imagesc(squeeze(templateWaveforms(171, :, :)))
title('Unit 170')
nexttile
imagesc(squeeze(templateWaveforms(197, :, :)))
title('Unit 196')
nexttile
imagesc(squeeze(templateWaveforms(203, :, :)))
title('Unit 202')
nexttile
imagesc(squeeze(templateWaveforms(219, :, :)))
title('Unit 218')

% noise
figure;
noise_plot = tiledlayout(2,3);
title(noise_plot, 'Noise')
nexttile
imagesc(squeeze(templateWaveforms(2, :, :)))
title('Unit 1')
nexttile
imagesc(squeeze(templateWaveforms(30, :, :)))
title('Unit 29')
nexttile
imagesc(squeeze(templateWaveforms(126, :, :)))
title('Unit 125')
nexttile
imagesc(squeeze(templateWaveforms(130, :, :)))
title('Unit 129')
nexttile
imagesc(squeeze(templateWaveforms(168, :, :)))
title('Unit 167')
nexttile
imagesc(squeeze(templateWaveforms(221, :, :)))
title('Unit 220')

% bc good but phy noise
figure;
bc_good_phy_noise_plot = tiledlayout(2,3);
title(bc_good_phy_noise_plot, 'Bc good phy noise')
nexttile
imagesc(squeeze(templateWaveforms(19, :, :)))
title('Unit 18')
nexttile
imagesc(squeeze(templateWaveforms(31, :, :)))
title('Unit 30')
nexttile
imagesc(squeeze(templateWaveforms(105, :, :)))
title('Unit 104')
nexttile
imagesc(squeeze(templateWaveforms(128, :, :)))
title('Unit 127')
nexttile
imagesc(squeeze(templateWaveforms(160, :, :)))
title('Unit 159')
nexttile
imagesc(squeeze(templateWaveforms(192, :, :)))
title('Unit 191')

% figure; plot(squeeze(templateWaveforms(105, :, :)))

%% Raw waveform plots 

% good

new_raw_waveforms = permute(rawWaveforms.average, [1 3 2]);

figure;
good_plot = tiledlayout(2,3);
title(good_plot, 'Good units')
nexttile
imagesc(squeeze(new_raw_waveforms(83, :, :)))
title('Unit 82')
nexttile
imagesc(squeeze(new_raw_waveforms(145, :, :)))
title('Unit 144')
nexttile
imagesc(squeeze(new_raw_waveforms(171, :, :)))
title('Unit 170')
nexttile
imagesc(squeeze(new_raw_waveforms(197, :, :)))
title('Unit 196')
nexttile
imagesc(squeeze(new_raw_waveforms(203, :, :)))
title('Unit 202')
nexttile
imagesc(squeeze(new_raw_waveforms(219, :, :)))
title('Unit 218')

% noise
figure;
noise_plot = tiledlayout(2,3);
title(noise_plot, 'Noise')
nexttile
imagesc(squeeze(new_raw_waveforms(2, :, :)))
title('Unit 1')
nexttile
imagesc(squeeze(new_raw_waveforms(30, :, :)))
title('Unit 29')
nexttile
imagesc(squeeze(new_raw_waveforms(126, :, :)))
title('Unit 125')
nexttile
imagesc(squeeze(new_raw_waveforms(130, :, :)))
title('Unit 129')
nexttile
imagesc(squeeze(new_raw_waveforms(168, :, :)))
title('Unit 167')
nexttile
imagesc(squeeze(new_raw_waveforms(221, :, :)))
title('Unit 220')

% bc good but phy noise
figure;
bc_good_phy_noise_plot = tiledlayout(2,3);
title(bc_good_phy_noise_plot, 'Bc good phy noise')
nexttile
imagesc(squeeze(new_raw_waveforms(19, :, :)))
title('Unit 18')
nexttile
imagesc(squeeze(new_raw_waveforms(31, :, :)))
title('Unit 30')
nexttile
imagesc(squeeze(new_raw_waveforms(105, :, :)))
title('Unit 104')
nexttile
imagesc(squeeze(new_raw_waveforms(128, :, :)))
title('Unit 127')
nexttile
imagesc(squeeze(new_raw_waveforms(160, :, :)))
title('Unit 159')
nexttile
imagesc(squeeze(new_raw_waveforms(192, :, :)))
title('Unit 191')

% figure; plot(squeeze(new_raw_waveforms(105, :, :)))

%%  Corr of rawWaveforms.average and templateWaveforms

all_unit_corr = nan(size(new_raw_waveforms,1), 1);
for unit_idx=1:size(new_raw_waveforms, 1)
    temp_raw_waveforms = new_raw_waveforms(unit_idx,:,:);
    vector_raw_waveforms = temp_raw_waveforms(:,:)';

    temp_template_waveforms = templateWaveforms(unit_idx,:,:);
    vector_template_waveforms = temp_template_waveforms(:,:)';

    all_unit_corr(unit_idx) = corr(vector_raw_waveforms, vector_template_waveforms);
end

figure;
histogram(all_unit_corr,50)

[sorted_all_unit_corr, new_idx] = sort(all_unit_corr);

corr_cutoff = 0.3;
potential_noise_idx = find(sorted_all_unit_corr<corr_cutoff)';
potential_noise = new_idx(potential_noise_idx);

figure;
potential_noise_plot = tiledlayout(8,10);
title(potential_noise_plot, 'Potential noise')
for idx=1:length(potential_noise)
    unit_idx = potential_noise(idx);
    nexttile
    imagesc(squeeze(new_raw_waveforms(unit_idx, :, :)))
    title(['Unit ' num2str(unit_idx-1)])
end


% non zero channels

all_unit_non_zero_corr = nan(size(new_raw_waveforms,1), 1);
for unit_idx=1:size(new_raw_waveforms, 1)

    % get non-zero channels in template waveforms
    temp_template_waveforms = squeeze(templateWaveforms(unit_idx,:,:));
    
    zero_channel_idx = arrayfun(@(X) all(temp_template_waveforms(:,X) < 0.5 ...
        & temp_template_waveforms(:,X) > -0.5), [1:param.nChannels]);
    
    non_zero_template_waveforms = temp_template_waveforms(:, ~zero_channel_idx);
    
    % concatenate for comparison
    vector_non_zero_template_waveforms = non_zero_template_waveforms(:);

    % get raw waveforms on the same channels
    temp_raw_waveforms = squeeze(new_raw_waveforms(unit_idx,:,:));
    non_zero_raw_waveforms = temp_raw_waveforms(:, ~zero_channel_idx);
    vector_non_zero_raw_waveforms = non_zero_raw_waveforms(:);

    all_unit_non_zero_corr(unit_idx) = corr(vector_non_zero_raw_waveforms, vector_non_zero_template_waveforms);
end

figure;
histogram(all_unit_non_zero_corr,50)

[sorted_all_unit_non_zero_corr, new_idx] = sort(all_unit_non_zero_corr);

corr_cutoff = 0.6;
potential_noise_idx = find(sorted_all_unit_non_zero_corr<corr_cutoff)';
potential_noise_v2 = new_idx(potential_noise_idx);

figure;
potential_noise_plot = tiledlayout('flow');
title(potential_noise_plot, 'Potential noise')
for idx=1:length(potential_noise_v2)
    unit_idx = potential_noise_v2(idx);
    nexttile
    imagesc(squeeze(new_raw_waveforms(unit_idx, :, :)))
    title(['Unit ' num2str(unit_idx-1)])
end


% figure;
% plot(all_unit_non_zero_corr, all_unit_corr, '.')




%% compare max template channel to itself

new_raw_waveforms = permute(rawWaveforms.average, [1 3 2]);

corr_all_units = nan(size(rawWaveforms.average, 1), 1)
for curr_unit=1:size(rawWaveforms.average, 1)
    
        % find channel with max amplitude
    [max_amplitude, max_channel] = max(max(abs(templateWaveforms(curr_unit, :, :)), [], 2), [], 3);
    
    raw_wvf = squeeze(rawWaveforms.average(curr_unit, max_channel,:));
    template_wvf = (squeeze(templateWaveforms(curr_unit, :,max_channel)))';
    corr_all_units(curr_unit) = corr(raw_wvf, template_wvf);
end

figure; histogram(corr_all_units, 100)

potential_noise_v1 = find(corr_all_units<0.6 | isnan(corr_all_units));

figure; 
potential_noise_plot = tiledlayout('flow');
title(potential_noise_plot, 'Potential noise')
for idx=1:length(potential_noise_v1)
    curr_unit = potential_noise_v1(idx);
    nexttile
    imagesc(squeeze(new_raw_waveforms(curr_unit, :, :)))
    title(['Unit ' num2str(curr_unit-1)])
end


figure;
plot(raw_wvf)
hold on; 
plot(template_wvf)

temp_unitType = unitType;
temp_unitType(potential_noise_v1) = 0;

bc_good_templates_idx_mask = temp_unitType == 1 | temp_unitType == 2;
bc_good_templates_idx = find(bc_good_templates_idx_mask)';
bc_good_templates_identity = bc_good_templates_idx - 1;

bc_axons_idx_mask = temp_unitType == 3;
bc_axons_idx = find(bc_axons_idx_mask)';
bc_axons_identity = bc_axons_idx - 1;

bc_noise_idx_mask = temp_unitType == 0;
bc_noise_idx = find(bc_noise_idx_mask)';
bc_noise_identity = bc_noise_idx - 1;

bc_inc_axons_idx_mask = bc_good_templates_idx_mask | bc_axons_idx_mask;
bc_inc_axons_idx = find(bc_inc_axons_idx_mask)';
bc_inc_axons_identity = bc_inc_axons_idx - 1;


%% compare max template channel to max raw channel


new_raw_waveforms = permute(rawWaveforms.average, [1 3 2]);

% compare max channels on raw and template
all_units_corr_max_chan = nan(size(new_raw_waveforms, 1), 1);

for unit_idx=1:size(templateWaveforms,1)
    % find channel with max amplitude
    [template_max_amplitude, template_max_channel] = max(max(abs(templateWaveforms(unit_idx, :, :)), [], 2), [], 3);
    [raw_max_amplitude, raw_max_channel] = max(max(abs(new_raw_waveforms(unit_idx, :, :)), [], 2), [], 3);

    % get corr with max raw channel 
    raw_wvf = squeeze(new_raw_waveforms(unit_idx, :, raw_max_channel));
    template_wvf = squeeze(templateWaveforms(unit_idx, :, template_max_channel));
    all_units_corr_max_chan(unit_idx) = corr(raw_wvf', template_wvf');
end


% unit_idx = 1; 
% [raw_max_amplitude, raw_max_channel] = max(max(abs(new_raw_waveforms(unit_idx, :, :)), [], 2), [], 3);
% 
% figure; 
% plot(squeeze(new_raw_waveforms(unit_idx, :, rawWaveforms.peakChan(unit_idx))))
% hold on; 
% plot(squeeze(new_raw_waveforms(unit_idx, :, raw_max_channel)))


figure; histogram(all_units_corr_max_chan, 100)

potential_noise_v2 = find(all_units_corr_max_chan<0);

figure; 
potential_noise_plot = tiledlayout('flow');
title(potential_noise_plot, 'Potential noise')
for idx=1:length(potential_noise_v2)
    curr_unit = potential_noise_v2(idx);
    nexttile
    imagesc(squeeze(new_raw_waveforms(curr_unit, :, :)))
    title(['Unit ' num2str(curr_unit-1)])
end

temp_unitType = unitType;
temp_unitType(potential_noise_v2) = 0;

bc_good_templates_idx_mask = temp_unitType == 1 | temp_unitType == 2;
bc_good_templates_idx = find(bc_good_templates_idx_mask)';
bc_good_templates_identity = bc_good_templates_idx - 1;

bc_axons_idx_mask = temp_unitType == 3;
bc_axons_idx = find(bc_axons_idx_mask)';
bc_axons_identity = bc_axons_idx - 1;

bc_noise_idx_mask = temp_unitType == 0;
bc_noise_idx = find(bc_noise_idx_mask)';
bc_noise_identity = bc_noise_idx - 1;

bc_inc_axons_idx_mask = bc_good_templates_idx_mask | bc_axons_idx_mask;
bc_inc_axons_idx = find(bc_inc_axons_idx_mask)';
bc_inc_axons_identity = bc_inc_axons_idx - 1;


%% get rid of amplitude

new_raw_waveforms = permute(rawWaveforms.average, [1 3 2]);

% compare max channels on raw and template
all_units_amp_decay = nan(size(new_raw_waveforms, 1), 1);

for unit_idx=1:size(new_raw_waveforms,1)
    % find channel with max amplitude
    [raw_max_amplitude, raw_max_channel] = max(max(abs(new_raw_waveforms(unit_idx, :, :)), [], 2), [], 3);

    raw_max_ampl_all_channels = max(abs(new_raw_waveforms(unit_idx, :, :)), [], 2);

    sum(raw_max_ampl_all_channels>0.7*raw_max_amplitude)

%     prctile(raw_max_ampl_all_channels, 95)

    % get corr with max raw channel 
    raw_wvf = squeeze(new_raw_waveforms(unit_idx, :, raw_max_channel));
    template_wvf = squeeze(templateWaveforms(unit_idx, :, template_max_channel));
    all_units_corr_max_chan(unit_idx) = corr(raw_wvf', template_wvf');
end




